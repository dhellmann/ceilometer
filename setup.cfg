[metadata]
name = ceilometer
version = 2013.2
summary = OpenStack Metering
description-file =
    README.md
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://www.openstack.org/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.6
    Programming Language :: Python :: 2.7
    Topic :: System :: Monitoring

[global]
setup-hooks =
    pbr.hooks.setup_hook

[files]
packages =
    ceilometer

[entry_points]
ceilometer.collector =
    instance = ceilometer.compute.notifications:Instance
    instance_flavor = ceilometer.compute.notifications:InstanceFlavor
    instance_delete = ceilometer.compute.notifications:InstanceDelete
    instance_scheduled = ceilometer.compute.notifications:InstanceScheduled
    memory = ceilometer.compute.notifications:Memory
    vcpus = ceilometer.compute.notifications:VCpus
    disk_root_size = ceilometer.compute.notifications:RootDiskSize
    disk_ephemeral_size = ceilometer.compute.notifications:EphemeralDiskSize
    volume = ceilometer.volume.notifications:Volume
    volume_size = ceilometer.volume.notifications:VolumeSize
    image_crud = ceilometer.image.notifications:ImageCRUD
    image = ceilometer.image.notifications:Image
    image_size = ceilometer.image.notifications:ImageSize
    image_download = ceilometer.image.notifications:ImageDownload
    image_serve = ceilometer.image.notifications:ImageServe
    network = ceilometer.network.notifications:Network
    subnet = ceilometer.network.notifications:Subnet
    port = ceilometer.network.notifications:Port
    router = ceilometer.network.notifications:Router
    floatingip = ceilometer.network.notifications:FloatingIP

ceilometer.poll.compute =
    disk.read.requests = ceilometer.compute.pollsters.disk:ReadRequestsPollster
    disk.write.requests = ceilometer.compute.pollsters.disk:WriteRequestsPollster
    disk.read.bytes = ceilometer.compute.pollsters.disk:ReadBytesPollster
    disk.write.bytes = ceilometer.compute.pollsters.disk:WriteBytesPollster
    cpu = ceilometer.compute.pollsters.cpu:CPUPollster
    cpu_util = ceilometer.compute.pollsters.cpu:CPUUtilPollster
    network.incoming.bytes = ceilometer.compute.pollsters.net:IncomingBytesPollster
    network.incoming.packets = ceilometer.compute.pollsters.net:IncomingPacketsPollster
    network.outgoing.bytes = ceilometer.compute.pollsters.net:OutgoingBytesPollster
    network.outgoing.packets = ceilometer.compute.pollsters.net:OutgoingPacketsPollster
    instance = ceilometer.compute.pollsters.instance:InstancePollster
    instance_flavor = ceilometer.compute.pollsters.instance:InstanceFlavorPollster

ceilometer.poll.central =
    network_floatingip = ceilometer.network.floatingip:FloatingIPPollster
    image = ceilometer.image.glance:ImagePollster
    objectstore = ceilometer.objectstore.swift:SwiftPollster
    energy = ceilometer.energy.kwapi:EnergyPollster
    power = ceilometer.energy.kwapi:PowerPollster

ceilometer.storage =
    log = ceilometer.storage.impl_log:LogStorage
    mongodb = ceilometer.storage.impl_mongodb:MongoDBStorage
    mysql = ceilometer.storage.impl_sqlalchemy:SQLAlchemyStorage
    postgresql = ceilometer.storage.impl_sqlalchemy:SQLAlchemyStorage
    sqlite = ceilometer.storage.impl_sqlalchemy:SQLAlchemyStorage
    hbase = ceilometer.storage.impl_hbase:HBaseStorage

ceilometer.compute.virt =
    libvirt = ceilometer.compute.virt.libvirt.inspector:LibvirtInspector

ceilometer.transformer =
    accumulator = ceilometer.transformer.accumulator:TransformerAccumulator

ceilometer.publisher =
    test = ceilometer.publisher.test:TestPublisher
    meter_publisher = ceilometer.publisher.rpc:RPCPublisher
    meter = ceilometer.publisher.rpc:RPCPublisher
    rpc = ceilometer.publisher.rpc:RPCPublisher
    udp = ceilometer.publisher.udp:UDPPublisher

ceilometer.alarm =
    threshold_eval = ceilometer.alarm.threshold_evaluation:Evaluator

paste.filter_factory =
    swift = ceilometer.objectstore.swift_middleware:filter_factory

console_scripts =
    ceilometer-api = ceilometer.api.app:start
    ceilometer-agent-central = ceilometer.central.manager:agent_central
    ceilometer-agent-compute = ceilometer.compute.manager:agent_compute
    ceilometer-dbsync = ceilometer.storage:dbsync
    ceilometer-collector = ceilometer.collector.service:collector
    ceilometer-collector-udp = ceilometer.collector.service:udp_collector
    ceilometer-alarm-singleton = ceilometer.alarm.service:singleton_alarm

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = ceilometer/locale/ceilometer.pot

[compile_catalog]
directory = ceilometer/locale
domain = ceilometer

[update_catalog]
domain = ceilometer
output_dir = ceilometer/locale
input_file = ceilometer/locale/ceilometer.pot
